name: Docker Image CI

on:
  push:
    branches: [ "release-*" ]
  pull_request:
    branches: [ "release-*" ]

env:
 LOGIN: ${{ secrets.DOCKER_LOGIN }}
 NAME: ${{ secrets.DOCKER_NAME }}

jobs:
  build:
    runs-on: self-hosted
    steps:
    - name: Login Docker
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build -t $LOGIN/$NAME:${{ github.ref_name }} -f Dockerfile .
    - name: Save Docker image locally
      run: |
        mkdir -p ./docker-images
        docker save $LOGIN/$NAME:${{ github.ref_name }} > ./docker-images/image.tar
    - name: Stop and remove existing container
      run: |
        CONTAINER_NAME="bunkerServer"
        if docker ps -a --filter "name=$CONTAINER_NAME" --format '{{.Names}}' | grep -q "$CONTAINER_NAME"; then
          echo "Stopping and removing existing container..."
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
        fi
    - name: Load Docker image from file
      run: docker load < ./docker-images/image.tar
    - name: Run the new container
      run: |
        CONTAINER_NAME="bunkerServer"
        docker run -d --name $CONTAINER_NAME $LOGIN/$NAME:${{ github.ref_name }}